name: ${PROJECT_SLUG}
title: ${PROJECT_NAME}
base: core18
version: '${PROJECT_VERSION}'
summary: ${PROJECT_DESCRIPTION}
description: |
  An application to create and edit animations for the web and similar.

#icon: share/${PROJECT_SLUG}/${PROJECT_SLUG}/images/logo.svg
icon: data/images/logo.svg
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict
passthrough:
    license: GPL-3.0

apps:
    ${PROJECT_SLUG}:
        command: bin/${PROJECT_SLUG}
        desktop: share/${PROJECT_SLUG}/${PROJECT_SLUG}/${PROJECT_SLUG}.desktop
        plugs:
            - desktop
            - desktop-legacy
            - wayland
            - unity7
            - home
        extensions:
            - kde-neon

parts:
    ${PROJECT_SLUG}:

        source: .
        source-type: local
        #source: https://gitlab.com/mattbas/glaxnimate.git
        #source-type: git
        #source-branch: release
        plugin: cmake
        build-packages:
            #- g++
            #- cmake
            #- qtbase5-dev
            - libpython3-dev
            - zlib1g-dev
            - make
        stage-packages:
            #- libqt5xml5
            #- libqt5widgets5
            - libpython3.6
            - zlib1g
            - libgtk3-nocsd0
        override-build: |
            apt-get update -qq
            apt-get install -y libpython3-dev python3-pip software-properties-common desktop-file-utils zlib1g-dev
            add-apt-repository ppa:beineri/opt-qt-5.14.2-bionic -y
            add-apt-repository ppa:ubuntu-toolchain-r/test -y
            apt update -qq
            apt-get install -y qt514base qt514tools qt514translations libgl1-mesa-dev g++-9 qt514svg
            pip3 install cmake
            export LD_LIBRARY_PATH=/opt/qt514/lib/
            cmake /root/parts/glaxnimate/src -DCMAKE_CXX_COMPILER=/usr/bin/g++-9 -DQt5_DIR=/opt/qt514/lib/cmake/Qt5 -DCMAKE_PREFIX_PATH=/opt/qt514/lib/cmake/Qt5LinguistTools/
            make -j2
            make translations
            make install DESTDIR=/root/parts/glaxnimate/install/

        # I think there's a better way of doing this? but documentation isn't clear
        override-stage: snapcraftctl stage; cp -r /root/parts/glaxnimate/install/usr/local/* /root/stage
        override-prime: snapcraftctl prime; cp -r /root/parts/glaxnimate/install/usr/local/* /root/prime
        #after:
            #- desktop-qt5

# https://snapcraft.io/docs/snapcraft-yaml-reference
# Commands:
# mkdir build
# cd build
# cmake ..
# cd ..
# mkdir snap
# cp build/snapcraft.yml snap
# snapcraft --debug
#
