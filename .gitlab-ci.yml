# https://gitlab.com/mattia.basaglia/glaxnimate/-/ci/lint
default:
    before_script:
        - apt-get update -qq
        - apt-get install -y cmake qtbase5-dev libpython3-dev python3-pip qttools5-dev-tools zlib1g-dev qttools5-dev-tools qttools5-dev

variables:
    DEBIAN_FRONTEND: noninteractive
    GIT_SUBMODULE_STRATEGY: recursive

pages:
    image: ubuntu:latest
    stage: deploy
    script:
        - apt-get install -y doxygen graphviz g++ python3-distutils git
        - mkdir -p build
        - cd build
        - cmake ..
        - make doxygen
        - make docs_depends_install
        - make docs
    after_script:
        - mv build/docs/site public
        - mv build/coverage public/coverage
        - mv build/doxygen/html public/doxygen
    artifacts:
        paths:
            - public
    when: always
    only:
        - master
    needs: ["linux:test"]


linux:test:
    image: ubuntu:latest
    stage: build
    script:
        - pip3 install gcovr
        - mkdir build
        - cd build
        - cmake ..
        - make tests_coverage
    artifacts:
        paths:
            - build/coverage
    when: always

linux:build:
    image: ubuntu:latest
    stage: build
    script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_CXX_FLAGS="-Werror -pedantic"
        - make VERBOSE=1
    when: always

linux:deb:
    image: ubuntu:latest
    stage: build
    script:
        - mkdir build
        - cd build
        - cmake .. -DCPACK_DEBIAN_FILE_NAME=glaxnimate.deb -DVERSION_SUFFIX="deb-$CI_COMMIT_SHORT_SHA"
        - make
        - make translations
        - cpack -G DEB
        - sha1sum glaxnimate.deb >checksum.txt
    artifacts:
        paths:
            - build/glaxnimate.deb
            - build/checksum.txt
    when: always

linux:aur:
    stage: deploy
    needs: ["linux:deb"]
    dependencies:
        - linux:deb
    only:
        - tags
    before_script:
        - apt-get update -qq
        - apt-get install -y git
    script:
        - test -n "$AUR_SSH_KEY"
        - chmod 700 $AUR_SSH_KEY
        - GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i $AUR_SSH_KEY" git clone ssh://aur@aur.archlinux.org/glaxnimate-bin.git
        - CHECKSUM="$(grep -Eo "^[^ ]+" checksum.txt)"
        - echo "$CHECKSUM"
        - test -n "$CHECKSUM"
        - PROJECT_VERSION="$(grep -Po "PROJECT_VERSION:STATIC=\K.*" ../CMakeCache.txt)"
        - echo "$PROJECT_VERSION"
        - test -n "$PROJECT_VERSION"
        - cd glaxnimate-bin
        - sed -i -e "s/pkgver=.*/pkgver=$PROJECT_VERSION/" -e "s/sha1sums=.*/sha1sums=('$CHECKSUM')/" PKGBUILD
        - sed -i -e "s/pkgver = .*/pkgver = $PROJECT_VERSION/" -e "s/sha1sums = .*/sha1sums = $CHECKSUM/" .SRCINFO
        - git config user.name "Glaxnimate CI"
        - git config user.email "glaxnimate-ci@mattbas.org"
        - git add PKGBUILD .SRCINFO
        - git commit -m "Update to version $PACKAGE_VERSION"
        - GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i $AUR_SSH_KEY" git push

linux:appimage:
    image: ubuntu:16.04
    stage: build
    before_script:
        - apt-get update -qq
        - apt-get install -y libpython3-dev python3-pip software-properties-common desktop-file-utils wget zlib1g-dev
        - add-apt-repository ppa:beineri/opt-qt-5.15.0-xenial -y
        - add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - apt update -qq
        - apt-get install -y qt515base qt515tools qt515translations libgl1-mesa-dev g++-9 qt515svg
        - pip3 install cmake
    script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_CXX_COMPILER=/usr/bin/g++-9 -DCMAKE_PREFIX_PATH=/opt/qt515/lib/cmake/Qt5LinguistTools/ -DVERSION_SUFFIX="appimage-$CI_COMMIT_SHORT_SHA"
        - make
        - make translations
        - make install DESTDIR=AppDir >/dev/null
        - cp AppDir/usr/share/glaxnimate/glaxnimate/glaxnimate.desktop AppDir
        - cp AppDir/usr/share/glaxnimate/glaxnimate/images/glaxnimate.png AppDir
        - wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        - ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract
        - PATH="/opt/qt515/bin/:$PATH" VERSION=dev ./squashfs-root/AppRun AppDir/glaxnimate.desktop -extra-plugins=iconengines,platformthemes,imageformats -appimage
        - mv glaxnimate-dev-x86_64.AppImage glaxnimate-x86_64.AppImage
        - sha1sum glaxnimate-x86_64.AppImage >checksum.txt
    artifacts:
        paths:
            - build/glaxnimate-x86_64.AppImage
            - build/checksum.txt
    when: always

#mxe:build:
    #image: mattbas/mxe-qt5:latest
    #stage: build
    #before_script:
    #script:
        #- mkdir build
        #- cd build
        #- x86_64-w64-mingw32.shared.posix-cmake .. -DCMAKE_INSTALL_PREFIX=/ -DVERSION_SUFFIX="win-$CI_COMMIT_SHORT_SHA"
        #- make
        #- make translations
        #- make install DESTDIR=glaxnimate >/dev/null
        #- /mxedeployqt/mxedeployqt --mxepath "/mxe" --mxetarget x86_64-w64-mingw32.shared.posix glaxnimate/bin/
        #- cp external/Qt-Color-Widgets/libQtColorWidgets.dll glaxnimate/bin/
        #- cp ../deploy/glaxnimate.bat glaxnimate
        #- zip -r glaxnimate-x86_64.zip glaxnimate >/dev/null
        #- sha1sum glaxnimate-x86_64.zip >checksum.txt
    #artifacts:
        #paths:
            #- build/glaxnimate-x86_64.zip
            #- build/checksum.txt
    #when: always

tarball:
    stage: build
    before_script:
    script:
        - rm -rf .git
        - cd ..
        - tar -caf /tmp/glaxnimate-src.tar.gz "$(basename "$CI_PROJECT_DIR")"
        - cd "$CI_PROJECT_DIR"
        - mv /tmp/glaxnimate-src.tar.gz .
        - sha256sum glaxnimate-src.tar.gz >sha256.txt
    artifacts:
        paths:
            - glaxnimate-src.tar.gz
            - sha256.txt

release:
    stage: deploy
    before_script:
        - apt-get update -qq
        - apt-get install -y python3-pip
        - pip3 install requests
    script:
        - ./deploy/make_release.py
        - ./deploy/bintray_release.sh $CI_COMMIT_TAG MacOs/glaxnimate.dmg
        - ./deploy/bintray_release.sh $CI_COMMIT_TAG MacOs/checksum.txt
        - ./deploy/bintray_release.sh $CI_COMMIT_TAG Win/glaxnimate-x86_64.zip
        - ./deploy/bintray_release.sh $CI_COMMIT_TAG Win/checksum.txt
    dependencies:
        - linux:test
        - linux:appimage
        - linux:deb
    only:
        - tags

linux:snap_tag:
    stage: deploy
    only:
        - tags
    before_script:
        - apt-get update -qq
        - apt-get install -y
    script:
        - test -n "$SNAPCRAFT_LOGIN_FILE"
        - mkdir -p build
        - cd build
        - cmake ..
        - cd ..
        - mkdir snap
        - cp build/snapcraft.yml snap
        - snapcraft
        - snapcraft login --with "$SNAPCRAFT_LOGIN_FILE"
        - snapcraft upload --release=stable glaxnimate_*.snap

linux:snap_beta:
    image: snapcore/snapcraft:beta
    stage: deploy
    only:
        - master
    before_script:
        - apt-get update -qq
        - apt-get install -y python3-pip
        - apt remove cmake
        - pip3 install cmake
    script:
        - test -n "$SNAPCRAFT_LOGIN_FILE"
        - mkdir -p build
        - cd build
        - cmake .. -DVERSION_SUFFIX="snap-$CI_COMMIT_SHORT_SHA"
        - cd ..
        - mkdir snap
        - cp build/snapcraft.yml snap
        - snapcraft
        - snapcraft login --with "$SNAPCRAFT_LOGIN_FILE"
        - snapcraft upload --release=beta glaxnimate_*.snap
